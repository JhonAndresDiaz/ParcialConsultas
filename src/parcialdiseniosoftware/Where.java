
package parcialdiseniosoftware;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.mariadb.jdbc.Connection;

/**
 *
 * @author diaza
 */
public class Where extends javax.swing.JFrame {
    
    DefaultTableModel modelo;


    /**
     * Creates new form Where
     */
    public Where() {
        initComponents();
        modelo = (DefaultTableModel) userTable.getModel();
        actualizarTablar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBuscarCodigo = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTipoConsulta = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtMotivo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPrioridad = new javax.swing.JTextField();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(103, 160, 174));
        jLabel1.setText("Nombre");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, -1, -1));

        txtBuscarCodigo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtBuscarCodigo.setForeground(new java.awt.Color(103, 160, 174));
        txtBuscarCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarCodigoKeyTyped(evt);
            }
        });
        jPanel1.add(txtBuscarCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 130, -1));

        btnBuscar.setBackground(new java.awt.Color(103, 160, 174));
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 90, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(103, 160, 174));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Consultas Hospital");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, 30, 560, -1));

        userTable.setBackground(new java.awt.Color(255, 255, 255));
        userTable.setForeground(new java.awt.Color(103, 160, 174));
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Fecha", "Codigo", "TipoConsulta", "Motivo", "Hora", "Prioridad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userTable.setSelectionBackground(new java.awt.Color(103, 160, 174));
        userTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);
        if (userTable.getColumnModel().getColumnCount() > 0) {
            userTable.getColumnModel().getColumn(0).setResizable(false);
            userTable.getColumnModel().getColumn(1).setResizable(false);
            userTable.getColumnModel().getColumn(2).setResizable(false);
            userTable.getColumnModel().getColumn(3).setResizable(false);
            userTable.getColumnModel().getColumn(4).setResizable(false);
            userTable.getColumnModel().getColumn(5).setResizable(false);
            userTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 530, 140));

        txtNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 120, -1));

        jLabel3.setForeground(new java.awt.Color(103, 160, 174));
        jLabel3.setText("Ingrese un codigo para buscar:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 86, -1, 20));

        jLabel4.setForeground(new java.awt.Color(103, 160, 174));
        jLabel4.setText("Fecha");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 40, -1));

        txtFecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, 120, -1));

        jLabel5.setForeground(new java.awt.Color(103, 160, 174));
        jLabel5.setText("Codigo");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 280, -1, -1));

        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });
        jPanel1.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 120, -1));

        jLabel6.setForeground(new java.awt.Color(103, 160, 174));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Tipo Consulta");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 120, -1));

        txtTipoConsulta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txtTipoConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 120, -1));

        jLabel7.setForeground(new java.awt.Color(103, 160, 174));
        jLabel7.setText("Motivo");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 340, -1, -1));

        txtMotivo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txtMotivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, 120, -1));

        jLabel8.setForeground(new java.awt.Color(103, 160, 174));
        jLabel8.setText("Hora");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, -1, -1));

        txtHora.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txtHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, 120, -1));

        jLabel9.setForeground(new java.awt.Color(103, 160, 174));
        jLabel9.setText("Prioridad");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 390, -1, -1));

        txtPrioridad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txtPrioridad, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, 120, -1));

        btnModificar.setBackground(new java.awt.Color(103, 160, 174));
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, 90, -1));

        btnEliminar.setBackground(new java.awt.Color(103, 160, 174));
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 450, 90, -1));

        btnAgregar.setBackground(new java.awt.Color(103, 160, 174));
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 450, 90, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String campo = txtBuscarCodigo.getText();
        String where = "";
        if(!"".equals(campo)){
            where = "WHERE codigo = '" + campo +"'";
        }

        try{
            DefaultTableModel modelo = new  DefaultTableModel();
            userTable.setModel(modelo);

            PreparedStatement ps = null;
            ResultSet rs = null;
            ConexionDB conn = new ConexionDB();
            Connection con = (Connection) conn.getConexion();

            String sql = "SELECT * FROM consultas " + where;
            ps = con.prepareStatement(sql);  //Consulta
            rs = ps.executeQuery();    //Resultado

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("Nombre");
            modelo.addColumn("Fecha");
            modelo.addColumn("Codigo");
            modelo.addColumn("TipoConsulta");
            modelo.addColumn("Motivo");
            modelo.addColumn("Hora");
            modelo.addColumn("Prioridad");

            int anchos[] = {100, 50, 50, 70, 50, 50, 50};
            for (int i = 0; i < userTable.getColumnCount(); i++) {
                userTable.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(userTable.getSelectedRow() == -1 || txtNombre.getText().isEmpty() || txtCodigo.getText().isEmpty() || txtFecha.getText().isEmpty() || txtMotivo.getText().isEmpty() || txtHora.getText().isEmpty() || txtTipoConsulta.getText().isEmpty() || txtPrioridad.getText().isEmpty()){
            if(userTable.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "Seleccione una consulta");
            }else if(txtNombre.getText().isEmpty() || txtCodigo.getText().isEmpty() || txtFecha.getText().isEmpty() || txtMotivo.getText().isEmpty() || txtHora.getText().isEmpty() || txtTipoConsulta.getText().isEmpty() || txtPrioridad.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Complete todos los campos");
            }
        }else {
            int Fila = userTable.getSelectedRow();
            PreparedStatement ps = null;
            try {
                ConexionDB objCon = new ConexionDB();
                Connection conn = objCon.getConexion();
                ps = conn.prepareStatement("UPDATE consultas SET nombre_paciente=?, fecha_atencion=?, tipo_consulta=?, motivo=?, hora=?, prioridad=? WHERE codigo=?");

                ps.setString(1, txtNombre.getText());
                ps.setString(2, txtFecha.getText());
                ps.setString(3, txtTipoConsulta.getText());
                ps.setString(4, txtMotivo.getText());
                ps.setString(5, txtHora.getText());
                ps.setString(6, txtPrioridad.getText());
                ps.setString(7, txtCodigo.getText());

                ps.execute();

                JOptionPane.showMessageDialog(null, "Consulta Modificada");
                userTable.setValueAt(txtNombre.getText(), Fila, 0);
                userTable.setValueAt(txtFecha.getText(), Fila, 1);
                userTable.setValueAt(txtCodigo.getText(), Fila, 2);
                userTable.setValueAt(txtTipoConsulta.getText(), Fila, 3);
                userTable.setValueAt(txtMotivo.getText(), Fila, 4);
                userTable.setValueAt(txtHora.getText(), Fila, 5);
                userTable.setValueAt(txtPrioridad.getText(), Fila, 6);
                limpiar();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al Modificar la consulta");
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    if(userTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una consulta");
        }else {
            PreparedStatement ps = null;
            try {
                ConexionDB objCon = new ConexionDB();
                Connection conn = objCon.getConexion();

                int Fila = userTable.getSelectedRow();
                String codigo = userTable.getValueAt(Fila, 2).toString();

                ps = conn.prepareStatement("DELETE FROM consultas WHERE codigo=?");
                ps.setString(1, codigo);
                ps.execute();

                JOptionPane.showMessageDialog(null, "Consulta Eliminada");
                actualizarTablar();
                limpiar();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al Eliminar la consulta");
                System.out.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if(txtNombre.getText().isEmpty() || txtCodigo.getText().isEmpty() || txtFecha.getText().isEmpty() || txtMotivo.getText().isEmpty() || txtHora.getText().isEmpty() || txtTipoConsulta.getText().isEmpty() || txtPrioridad.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        }else {
            PreparedStatement ps = null;
            try{
                ConexionDB objCon = new ConexionDB();
                Connection conn = objCon.getConexion();
                ps = conn.prepareStatement("INSERT INTO consultas (nombre_paciente, fecha_atencion, codigo, tipo_consulta, motivo, hora, prioridad) VALUES (?,?,?,?,?,?,?)");
                ps.setString(1, txtNombre.getText());
                ps.setString(2, txtFecha.getText());
                ps.setString(3, txtCodigo.getText());
                ps.setString(4, txtTipoConsulta.getText());
                ps.setString(5, txtMotivo.getText());
                ps.setString(6, txtHora.getText());
                ps.setString(7, txtPrioridad.getText());
                ps.execute();
                JOptionPane.showMessageDialog(null, "Consulta guardada");
                actualizarTablar();
                limpiar();
            }catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al guardar la consulta");
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        txtNombre.setText(userTable.getValueAt(userTable.getSelectedRow(), 0).toString());
        txtFecha.setText(userTable.getValueAt(userTable.getSelectedRow(), 1).toString());
        txtCodigo.setText(userTable.getValueAt(userTable.getSelectedRow(), 2).toString());
        txtTipoConsulta.setText(userTable.getValueAt(userTable.getSelectedRow(), 3).toString());
        txtMotivo.setText(userTable.getValueAt(userTable.getSelectedRow(), 4).toString());
        txtHora.setText(userTable.getValueAt(userTable.getSelectedRow(), 5).toString());
        txtPrioridad.setText(userTable.getValueAt(userTable.getSelectedRow(), 6).toString());

        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            ConexionDB objCon = new ConexionDB();
            Connection conn = objCon.getConexion();

            int Fila = userTable.getSelectedRow();
            String codigo = userTable.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT codigo, nombre_paciente, fecha_atencion, tipo_consulta, motivo, hora, prioridad FROM consultas WHERE codigo=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCodigo.setText(rs.getString("codigo"));
                txtNombre.setText(rs.getString("nombre_paciente"));
                txtFecha.setText(rs.getString("fecha_atencion"));
                txtTipoConsulta.setText(rs.getString("tipo_consulta"));
                txtMotivo.setText(rs.getString("motivo"));
                txtHora.setText(rs.getString("hora"));
                txtPrioridad.setText(rs.getString("prioridad"));
                actualizarTablar();
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_userTableMouseClicked

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingresar solo números");
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtBuscarCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarCodigoKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingresar solo números");
        }
    }//GEN-LAST:event_txtBuscarCodigoKeyTyped

    public void limpiar(){
        txtNombre.setText("");
        txtFecha.setText("");
        txtCodigo.setText("");
        txtHora.setText("");
        txtMotivo.setText("");
        txtPrioridad.setText("");
        txtTipoConsulta.setText("");
    }
    
    public void actualizarTablar() {
        try{
            DefaultTableModel modelo = new  DefaultTableModel();
            userTable.setModel(modelo);

            PreparedStatement ps = null;
            ResultSet rs = null;
            ConexionDB conn = new ConexionDB();
            Connection con = (Connection) conn.getConexion();

            String sql = "SELECT * FROM consultas ";
            ps = con.prepareStatement(sql);  
            rs = ps.executeQuery();    

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("Nombre");
            modelo.addColumn("Fecha");
            modelo.addColumn("Codigo");
            modelo.addColumn("TipoConsulta");
            modelo.addColumn("Motivo");
            modelo.addColumn("Hora");
            modelo.addColumn("Prioridad");


            int anchos[] = {100, 50, 50, 70, 50, 50, 50};
            for (int i = 0; i < userTable.getColumnCount(); i++) {
                userTable.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Where.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Where.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Where.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Where.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Where().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscarCodigo;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtMotivo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrioridad;
    private javax.swing.JTextField txtTipoConsulta;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
